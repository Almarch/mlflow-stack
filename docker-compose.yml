

services:
  mlflow:
    build:
      context: .
      dockerfile_inline: |
        FROM ghcr.io/mlflow/mlflow:latest
        RUN pip install --no-cache-dir psycopg2-binary boto3
    depends_on:
      - postgres
      - minio
    environment:
      MLFLOW_DB_URI: postgresql://mlflow:${POSTGRES_MLFLOW_PASSWORD}@postgres:5432/mlflow
      MLFLOW_ARTIFACT_ROOT: s3://mlflow-artifacts/
      AWS_ACCESS_KEY_ID: mlflow
      AWS_SECRET_ACCESS_KEY: ${MINIO_MLFLOW_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow:${POSTGRES_MLFLOW_PASSWORD}@postgres:5432/mlflow
      --default-artifact-root s3://mlflow-artifacts/
      --host 0.0.0.0
      --allowed-hosts "*"
      --cors-allowed-origins "*"

  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: ${POSTGRES_MLFLOW_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres:/var/lib/postgresql/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio:/data

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set local http://minio:9000 admin ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/mlflow-artifacts || true &&
      mc admin user add local mlflow ${MINIO_MLFLOW_PASSWORD} || true &&
      mc admin policy attach local readwrite --user=mlflow || true
      "
    environment:
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MLFLOW_USER_PASSWORD: ${MINIO_MLFLOW_PASSWORD}

  notebook:
    build: .
    environment:
      AWS_ACCESS_KEY_ID: mlflow
      AWS_SECRET_ACCESS_KEY: ${MINIO_MLFLOW_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    depends_on:
      - mlflow
    volumes:
      - ./notebook:/notebook
    ports:
      - 8080:80

